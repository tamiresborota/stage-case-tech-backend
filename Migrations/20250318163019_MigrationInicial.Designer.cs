// <auto-generated />
using System;
using CaseStage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaseStage.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250318163019_MigrationInicial")]
    partial class MigrationInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("CaseStage.Areas.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("CaseStage.DetalheProcesso.DocumentoProcesso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProcessoDetalheId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProcessoDetalheId");

                    b.ToTable("DocumentosProcesso");
                });

            modelBuilder.Entity("CaseStage.DetalheProcesso.FerramentaProcesso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProcessoDetalheId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProcessoDetalheId");

                    b.ToTable("FerramentasProcesso");
                });

            modelBuilder.Entity("CaseStage.DetalheProcesso.ResponsavelProcesso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProcessoDetalheId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProcessoDetalheId");

                    b.ToTable("ResponsaveisProcesso");
                });

            modelBuilder.Entity("CaseStage.Processos.Processo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AreaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ProcessoPaiId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("ProcessoPaiId");

                    b.ToTable("Processos");
                });

            modelBuilder.Entity("ProcessoDetalhe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ProcessoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProcessoId")
                        .IsUnique();

                    b.ToTable("ProcessosDetalhes");
                });

            modelBuilder.Entity("CaseStage.DetalheProcesso.DocumentoProcesso", b =>
                {
                    b.HasOne("ProcessoDetalhe", "ProcessoDetalhe")
                        .WithMany("Documentos")
                        .HasForeignKey("ProcessoDetalheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessoDetalhe");
                });

            modelBuilder.Entity("CaseStage.DetalheProcesso.FerramentaProcesso", b =>
                {
                    b.HasOne("ProcessoDetalhe", "ProcessoDetalhe")
                        .WithMany("Ferramentas")
                        .HasForeignKey("ProcessoDetalheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessoDetalhe");
                });

            modelBuilder.Entity("CaseStage.DetalheProcesso.ResponsavelProcesso", b =>
                {
                    b.HasOne("ProcessoDetalhe", "ProcessoDetalhe")
                        .WithMany("Responsaveis")
                        .HasForeignKey("ProcessoDetalheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessoDetalhe");
                });

            modelBuilder.Entity("CaseStage.Processos.Processo", b =>
                {
                    b.HasOne("CaseStage.Areas.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CaseStage.Processos.Processo", "ProcessoPai")
                        .WithMany("SubProcessos")
                        .HasForeignKey("ProcessoPaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Area");

                    b.Navigation("ProcessoPai");
                });

            modelBuilder.Entity("ProcessoDetalhe", b =>
                {
                    b.HasOne("CaseStage.Processos.Processo", "Processo")
                        .WithOne()
                        .HasForeignKey("ProcessoDetalhe", "ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Processo");
                });

            modelBuilder.Entity("CaseStage.Processos.Processo", b =>
                {
                    b.Navigation("SubProcessos");
                });

            modelBuilder.Entity("ProcessoDetalhe", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Ferramentas");

                    b.Navigation("Responsaveis");
                });
#pragma warning restore 612, 618
        }
    }
}
